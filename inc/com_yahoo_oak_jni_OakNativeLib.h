/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_yahoo_oak_jni_OakNativeLib */

#ifndef _Included_com_yahoo_oak_jni_OakNativeLib
#define _Included_com_yahoo_oak_jni_OakNativeLib
#ifdef __cplusplus
extern "C" {
#endif
#undef com_yahoo_oak_jni_OakNativeLib_NONE_ADDRESS
#define com_yahoo_oak_jni_OakNativeLib_NONE_ADDRESS 0LL
/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    alloc
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_alloc
        (JNIEnv *, jclass, jint);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_yahoo_oak_jni_OakNativeLib_release
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    build
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_build
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_yahoo_oak_jni_OakNativeLib_destroy
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    size
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_size
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    allocatedBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_allocatedBytes
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    countedAlloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_countedAlloc
        (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    countedRelease
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_yahoo_oak_jni_OakNativeLib_countedRelease
        (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    put
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_put
        (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    putIfAbsent
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_putIfAbsent
        (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    get
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_get
        (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    remove
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_remove
        (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorInit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorInit
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorDestroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorDestroy
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorHasNext
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorHasNext
        (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorIncrement
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorIncrement
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorGetKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorGetKey
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorGetValue
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorGetValue
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorNextKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorNextKey
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorNextValue
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorNextValue
        (JNIEnv *, jclass, jlong);

/*
 * Class:     com_yahoo_oak_jni_OakNativeLib
 * Method:    iteratorRemove
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_yahoo_oak_jni_OakNativeLib_iteratorRemove
        (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
